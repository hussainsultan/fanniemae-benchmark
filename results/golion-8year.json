[{"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 2, "run_date": "28/03/2022 21:11:54", "total_time": 79.51928496360779, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 1800.2734375, "incremental_memory_usage": 717.64453125, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 4, "run_date": "28/03/2022 21:12:25", "total_time": 30.48336100578308, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 2064.515625, "incremental_memory_usage": 2.34375, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 6, "run_date": "28/03/2022 21:12:46", "total_time": 20.69211983680725, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 2122.671875, "incremental_memory_usage": 373.3046875, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 8, "run_date": "28/03/2022 21:13:05", "total_time": 19.18787384033203, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 2190.66796875, "incremental_memory_usage": -1.76171875, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 10, "run_date": "28/03/2022 21:13:21", "total_time": 15.862622499465942, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 2288.12109375, "incremental_memory_usage": 210.11328125, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 12, "run_date": "28/03/2022 21:13:34", "total_time": 13.61734938621521, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 2386.0390625, "incremental_memory_usage": -36.03515625, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 14, "run_date": "28/03/2022 21:13:46", "total_time": 11.787857055664062, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 2418.5625, "incremental_memory_usage": 136.36328125, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 16, "run_date": "28/03/2022 21:13:58", "total_time": 12.147420883178711, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 2424.734375, "incremental_memory_usage": 6.49609375, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 18, "run_date": "28/03/2022 21:14:09", "total_time": 10.996636152267456, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 2444.328125, "incremental_memory_usage": 45.21875, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 20, "run_date": "28/03/2022 21:14:19", "total_time": 10.08425760269165, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 2516.83203125, "incremental_memory_usage": 92.09375, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 22, "run_date": "28/03/2022 21:14:29", "total_time": 9.237523317337036, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 2541.55859375, "incremental_memory_usage": 193.93359375, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 24, "run_date": "28/03/2022 21:14:37", "total_time": 8.707173109054565, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 2586.4140625, "incremental_memory_usage": -6.34375, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 26, "run_date": "28/03/2022 21:14:46", "total_time": 8.579508543014526, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 2619.52734375, "incremental_memory_usage": 154.81640625, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 28, "run_date": "28/03/2022 21:14:54", "total_time": 8.330053091049194, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 2709.79296875, "incremental_memory_usage": 195.89453125, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 30, "run_date": "28/03/2022 21:15:02", "total_time": 8.186823844909668, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 2779.6875, "incremental_memory_usage": 69.56640625, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 32, "run_date": "28/03/2022 21:15:12", "total_time": 9.989425420761108, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 2885.6953125, "incremental_memory_usage": -87.6640625, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 34, "run_date": "28/03/2022 21:15:22", "total_time": 9.713988542556763, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 2929.08984375, "incremental_memory_usage": 92.83984375, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 36, "run_date": "28/03/2022 21:15:32", "total_time": 9.553640842437744, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 2977.1953125, "incremental_memory_usage": 53.3203125, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 38, "run_date": "28/03/2022 21:15:41", "total_time": 9.38355803489685, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 3034.7265625, "incremental_memory_usage": 119.87109375, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 40, "run_date": "28/03/2022 21:15:50", "total_time": 9.254180192947388, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 3130.640625, "incremental_memory_usage": 25.296875, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 42, "run_date": "28/03/2022 21:15:59", "total_time": 9.060800313949585, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 3179.171875, "incremental_memory_usage": 196.48046875, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 44, "run_date": "28/03/2022 21:16:08", "total_time": 8.935603141784668, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 3303.83984375, "incremental_memory_usage": -26.96875, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 46, "run_date": "28/03/2022 21:16:17", "total_time": 8.764121294021606, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 3368.5703125, "incremental_memory_usage": 216.65625, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}, {"machine": "x86_64", "version": "#202112220937~1640185481~21.10~b3a2c21 SMP Wed Dec 22 15:41:49 U", "platform": "Linux-5.15.11-76051511-generic-x86_64-with-glibc2.34", "system": "Linux", "cpu_count": 48, "memory": 134978277376, "processor": "x86_64", "threads": 48, "run_date": "28/03/2022 21:16:26", "total_time": 8.56059980392456, "row_count_perf": 1124692412, "row_count_acq": 19144929, "max_memory_usage": 3503.84765625, "incremental_memory_usage": 84.9765625, "sql": "WITH performance AS ( SELECT perf.loan_id, book.orig_date, perf.loan_age AS stmt_number, book.borrower_credit_score, perf.disposition_date, perf.current_actual_upb, strftime( strptime(perf.monthly_reporting_period, '%Y-%d-%m'), '%Y-%m' ) AS report_month, CASE WHEN perf.current_loan_delinquency_status > 1 THEN 1 ELSE 0 END AS dq30, CASE WHEN perf.current_loan_delinquency_status > 3 THEN 1 ELSE 0 END AS dq90, CASE WHEN perf.current_loan_delinquency_status > 6 THEN 1 ELSE 0 END AS dq180, CASE WHEN perf.zero_balance_code = '02' THEN 1 WHEN perf.zero_balance_code = '03' THEN 1 WHEN perf.zero_balance_code = '09' THEN 1 WHEN perf.zero_balance_code = '15' THEN 1 ELSE 0 END AS bad FROM \"eight/perf/*.parquet\" AS perf, ( SELECT loan_id, borrower_credit_score, str_split(orig_date, '/')[1] AS orig_date FROM \"eight/acq/*.parquet\" ) AS book WHERE perf.loan_id = book.loan_id ) SELECT agg.orig_date, agg.stmt_number, loans.loan_count, agg.avg_credit_score, agg.upb_sum, agg.dollar_bad FROM (SELECT orig_date, stmt_number, avg(borrower_credit_score) AS avg_credit_score, sum(CASE WHEN disposition_date IS NOT NULL THEN current_actual_upb ELSE 0 END) AS dollar_bad, sum(current_actual_upb) AS upb_sum FROM performance WHERE stmt_number >= 1 GROUP BY orig_date, stmt_number) AS agg, (SELECT str_split(orig_date, '/')[1] AS orig_year, count(loan_id) AS loan_count FROM \"eight/acq/*.parquet\" GROUP BY orig_year) AS loans WHERE agg.orig_date = loans.orig_year;"}]
